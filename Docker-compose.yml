version: "3.8"

services:
  node-app:
    build: .
    container_name: node-app
    restart: always
    ports:
      - "7575:7575"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql-db
      - DB_USER=root
      - DB_PASSWORD=pass123
      - DB_NAME=docker
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/usr/src/app
    command: nodemon --legacy-watch --exec ts-node src/index.ts
    depends_on:
      - mysql-db
      - redis
    networks:
      - monitoring

  mysql-db:
    image: mysql:8
    container_name: mysql-db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: docker
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - monitoring

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql-db
      PMA_USER: root
      PMA_PASSWORD: pass123
    depends_on:
      - mysql-db
    networks:
      - monitoring

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "secret"]
    networks:
      - monitoring

  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    networks:
      - monitoring

  prom-server:
    image: prom/prometheus
    container_name: prom-server
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prom-server
      - loki
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    ports:
      - "9080:9080"  # Expose Promtail metrics endpoint
    volumes:
      - /var/log:/var/log  # Mount system log files
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  mysql-data:
  redis-insight:
  grafana_data:
  loki-data:
